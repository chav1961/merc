== Переменная market. Поля и методы

Предопределенная переменная **market** используется для доступа к функциональности меркурианского [[../../world/externals/market.cre|супермаркета]]. Она поддерживает следующие методы:

* market.buy(...) - купить [[#Купить компоненты здания|компоненты здания]]
* market.buy(...) - купить [[#Купить трубопровод или кабель|трубопровод или кабель]] для укладки
* market.buy(...) - купить специализированного [[#Купить робота|робота]]
* market.buy(...) - Купить недостающие [[#Купить ресурсы|ресурсы]]
* market.sell(...) - Продать [[#Продать компоненты здания|компоненты здания ]]
* market.sell(...) - Продать специализированного [[#Продать робота|робота ]]
* market.sell(...) - Продать излишки [[#Продать ресурсы|ресурсов]]
* market.price(...) - Получить [[#Получить прайс-лист|прайс-лист]]

=== Купить компоненты здания

//Назначение:// купить компоненты здания

//Формат вызова:// **market**.buy(//<Тип ресурса>//,//<Тип компонента>//,//<количество>//) или **market**.buy(//<Тип ресурса>//,//<Тип компонента>//)

* //<Тип ресурса>// - тип приобретаемого ресурса (EntityType), в данном случае всегда нужно указывать **EntityType.BuildingComponent**
* //<Тип компонента>// - наименование компонента здания (str). Конкретные наименования типов компонент см описания соответствующих зданий
* //<количество>// - количество закупаемых единиц (int). Если закупается один компонент, можно воспользоваться второй формой вызова метода

//Уровень игрока:// **1**

//Описание:// Для того, чтобы построить на станции какое-либо здание, вначале необходимо закупить в супермаркете все его компоненты. Закупка необходимых компонент выполняется путем вызова одного из описанных методов. Купленные кмопоненты будут доставлены на посадочную площадку и могут быть затем использованы роботом для строительства здания.

=== Купить трубопровод или кабель
//Назначение:// купить трубопровод или кабель

//Формат вызова:// **market**.buy(//<Тип ресурса>//,//<Тип трубопровода>//,//<количество>//)

* //<Тип ресурса>// - тип приобретаемого ресурса (EntityType), в данном случае всегда нужно указывать **EntityType.PipeComponent**
* //<Тип трубопровода>// - наименование типа трубопровода или кабеля (str). Конкретные наименования типов трубопроводов и кабелей см описания трубопроводов и кабелей
* //<количество>// - количество закупаемых единиц (int).

//Уровень игрока:// **2**

//Описание:// Для того, чтобы построить на станции какое-либо здание, вначале необходимо закупить в супермаркете все его компоненты. Закупка необходимых компонент выполняется путем вызова одного из описанных методов. Купленные компоненты будут доставлены на посадочную площадку и могут быть затем использованы роботом для прокладки трубопровода или кабеля.

=== Купить робота

//Назначение:// купить специализированного робота

//Формат вызова:// **market**.buy(//<Модель робота>//,//<Тип компонента>//)

* //<Тип ресурса>// - тип приобретаемого ресурса (EntityType), в данном случае всегда нужно указывать **EntityType.Robot**
* //<Модель робота>// - наименование модели робота (str). Название моделей роботов см здесь

//Уровень игрока:// **5**

//Описание:// Специализированных роботов можно приобретать как для выполнения одного задания (посче чего его можно снова продать), так и для постянного использования. Их функциональность ограничена определенным набором операций (в отличие от универсального робота), но производительность их на этих операциях выше, а стоимость операций - меньше. Купленный робот будет доставлен на посадочную площадку и может быть затем запрограммирован и использован универсальным роботом.

=== Купить ресурсы

//Назначение:// купить ресурсы

//Формат вызова:// **market**.buy(//<Тип ресурса>//,//<Тип компонента>//,//<количество>//)

* //<Тип ресурса>// - тип приобретаемого ресурса (EntityType), в данном случае всегда нужно указывать **EntityType.Resource**
* //<Тип компонента>// - наименование типа ресурса (str). Типы ресурсов, доступные игроку, см здесь
* //<количество>// - количество закупаемых единиц (real).

//Уровень игрока:// **3**

//Описание:// Покупать ресурсы имеет смысл тогда, когда собственных ресурсов оказывается недостаточно для выполнения заданий.

=== Продать компоненты здания

//Назначение:// продать компоненты здания

//Формат вызова:// **market**.sell(//<местоположение>//)

* //<местоположение>// - местоположение копонента здания на посадочной площадке (point)

//Уровень игрока:// **2**

//Описание:// Здания, в которых больше нет необходимости, можно разобрать, а их компоненты - продать обратно в супермеркет. Учтите, что цена закупа компонентов здания всегда ниже, чем цена их продажи.

=== Продать робота

//Назначение:// продать специализированного робота

//Формат вызова:// **market**.sell(//<местоположение>//)

* //<местоположение>// - местоположение робота на посадочной площадке (point)

//Уровень игрока:// **5**

//Описание:// Роботы, в которых больше нет необходимости, можно продать обратно в супермеркет. Учтите, что цена закупа роботов всегда ниже, чем цена их продажи.

=== Продать ресурсы

//Назначение:// продать ресурсы

//Формат вызова:// **market**.sell(//<местоположение>//)

* //<местоположение>// - местоположение ресурса на посадочной площадке (point)

//Уровень игрока:// **2**

//Описание:// Продажа ресурсов или готовой продукции - один из наиболее надежных способов пополнить игровой счет, поэтому необходимо всегда стремиться подзаработать на продаже, даже в процессе выполнения задания.

=== Получить прайс-лист

//Назначение:// получить прайс-лист

//Формат вызова:// **market**.price() : Price[]

//Уровень игрока:// **2**

//Описание:// Прайс-лист представляет собой массив со списком доступной продукции супермаркета (с учетом доступности товара игроку данного уровня). По результатам его программного анализа можно принимать решения о покупке или продаже того или иного товара. Этот же прайс-лист можно посмотреть на сайте, но помните, что он будет актуален на тот момент, когда вы его просматриваете, а не на тот момент, когда будет выполняться ваша программа.


